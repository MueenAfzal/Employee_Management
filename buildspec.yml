# version: 0.2
# phases:
#   install:
#     runtime-versions:
#       java: corretto17  

#   pre_build:
#     commands:
#        - echo Installing dependencies
#       - apt-get update && apt-get install -y wget unzip
#       - wget https://github.com/SonarSource/sonar-scanner-cli/releases/download/4.7.0.2747/sonar-scanner-4.7.0.2747-linux.zip
#       - unzip sonar-scanner-4.7.0.2747-linux.zip -d /opt/sonar-scanner
#       - export PATH=$PATH:/opt/sonar-scanner/sonar-scanner-4.7.0.2747-linux/bin
#       - echo $SONARQUBE_TOKEN > /tmp/sonar_token.txt  # Store token securely
#       - echo Installing SonarQube Scanner...
#       # Download and install SonarQube Scanner
#       - curl -sSLo sonar-scanner-cli.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip
#       - unzip sonar-scanner-cli.zip
#       - export PATH=$PWD/sonar-scanner-4.6.2.2472-linux/bin:$PATH
#       - sonar-scanner --version  # Verify installation

#   build:
#     commands:
#       - echo Starting SonarQube analysis
#       - sonar-scanner -Dsonar.projectKey=38a3f1733ca11fdd8720e1b236c77112695d2585 -Dsonar.organization=MueenAfzal -Dsonar.host.url=$SONARQUBE_URL -Dsonar.login=$SONARQUBE_TOKEN
version: 0.2

phases:
  install:
    runtime-versions:
      java: corretto17  
    commands:
      - echo Installing dependencies...

  pre_build:
    commands:
      - echo Pre-build phase: setting up dependencies...
      - yum update -y    
      - yum install -y jq 
      - retry_count=3
      - for i in $(seq 1 $retry_count); do wget https://archive.apache.org/dist/maven/maven-3/3.5.4/binaries/apache-maven-3.5.4-bin.tar.gz && break || sleep 10; done
      - tar xzf apache-maven-3.5.4-bin.tar.gz || true
      - ln -s apache-maven-3.5.4 maven
      - wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-3.3.0.1492-linux.zip
      - unzip ./sonar-scanner-cli-3.3.0.1492-linux.zip
      - mv sonar-scanner-3.3.0.1492-linux /sonar-scanner
      - export PATH=$PATH:/sonar-scanner/bin/

  build:
    commands:
      - echo Build phase: running SonarQube analysis...
      - find / -name pom.xml -exec mv {} ./pom.xml \; || true 
      - mvn sonar:sonar -Dsonar.login=38a3f1733ca11fdd8720e1b236c77112695d2585 -Dsonar.host.url=https://sonarcloud.io/ -Dsonar.projectKey=MueenAfzal_Employee_Management -Dsonar.organization=mueenafzal
      - sleep 5
      # Check the HTTP response status code directly
      - if curl -s -o /dev/null -w "%{http_code}" https://sonarcloud.io/api/qualitygates/project_status?projectKey=MueenAfzal_Employee_Management != "200"; then exit 1; fi

artifacts:
  files:
    - '**/*'

